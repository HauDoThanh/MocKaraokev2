apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def superpowered_sdk_path = properties.getProperty('superpowered.dir')

def computeVersionName() {
    return "2.0"
}

android {
    signingConfigs {
        config {
            keyAlias 'MocAlias'
            keyPassword '123456'
            storeFile file('D:/MocKaraoke.jks')
            storePassword '123456789'
        }
    }
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "home.mockaraokev2"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode rootProject.setVersion(1.5)
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            // these platforms cover 99% percent of all Android devices
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-16',
                        '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_ARM_NEON=TRUE',
                        '-DANDROID_STL=gnustl_static',
                        "-DPATH_TO_SUPERPOWERED:STRING=${superpowered_sdk_path}"
                cFlags '-O3', '-fsigned-char', '-fexceptions'
                // full optimization, char data type is signed
                cppFlags '-fsigned-char', "-I${superpowered_sdk_path}"
            }
        }
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jni']
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
    configurations {
        all {
            exclude module: 'httpclient'
        }
    }
    productFlavors {
    }

    // Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
    def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
    def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':FFmpegAndroid')
    compile files('libs/YouTubeAndroidPlayerApi.jar')
    compile 'com.google.api-client:google-api-client-android:1.22.0' exclude module: 'httpclient'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.google.code.gson:gson:2.6.1'
    compile 'com.android.support:appcompat-v7:25+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:cardview-v7:25+'
    compile 'com.android.support:design:25+'
    compile 'com.google.android.gms:play-services-auth:10.2.6'
    compile 'com.google.apis:google-api-services-youtube:v3-rev182-1.22.0'
    compile 'com.squareup.dagger:dagger-compiler:1.0.0'
    compile 'com.squareup.dagger:dagger:1.0.0'
    compile 'javax.inject:javax.inject:1'
    compile 'com.android.support:support-v4:25+'
    compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.facebook.android:facebook-android-sdk:4.26.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
    annotationProcessor 'com.squareup.dagger:dagger-compiler:1.0.0'
    androidTestCompile 'junit:junit:4.12'
}
apply plugin: 'com.google.gms.google-services'